on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

name: CI

env:
  RUST_TOOLCHAIN: 1.89.0

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt

      - name: Run rustfmt
        run: make fmt-check

  clippy:
    needs: [fmt]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Run clippy
        run: make clippy-check
        timeout-minutes: 10

  test:
    needs: [fmt]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TEST_GITHUB_USERNAME: samgozman
    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Run tests
        run: make test
        timeout-minutes: 10

  conclusion:
    needs: [fmt, clippy, test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Result
        run: |
          jq -C <<< "${needs}"
          # Check if all needs were successful or skipped.
          "$(jq -r 'all(.result as $result | (["success", "skipped"] | contains([$result])))' <<< "${needs}")"
        env:
          needs: ${{ toJson(needs) }}

  update-themes-readme:
    needs: [conclusion]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Generate themes README
        run: make gen-themes-readme

      - name: Check for changes
        id: verify-changed-files
        run: |
          if git diff --quiet assets/css/themes/README.md assets/css/themes/examples/; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add assets/css/themes/README.md assets/css/themes/examples/
          git commit -m "chore: update themes README and examples"
          git push origin HEAD:${{ github.head_ref }}
