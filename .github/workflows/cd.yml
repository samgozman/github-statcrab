name: CD

permissions:
  contents: write
  packages: write

on:
  release:
    types: [created]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: server
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-binary-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/server
          retention-days: 1

  build-and-push-docker:
    needs: [create-release, upload-assets]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Download binary artifact
        uses: actions/download-artifact@v5
        with:
          name: server-binary-x86_64-unknown-linux-gnu
          path: target/release/
      - name: Make binary executable
        run: chmod +x target/release/server
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/samgozman/github-statcrab/server
          tags: |
            type=ref,event=tag
            type=raw,value=latest
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.release
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
